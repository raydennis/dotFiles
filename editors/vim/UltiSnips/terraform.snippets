snippet resource
resource "${1:}" "${2:}" {
}
endsnippet

snippet resource-group "Create a resource group if it doesnâ€™t exist" -b
resource "azurerm_resource_group" "myterraformgroup" {
    name     = "myResourceGroup"
    location = "westus2"

    tags = {
        environment = "Terraform Demo"
    }
}
endsnippet

snippet resource-virtual-network
resource "azurerm_virtual_network" "myterraformnetwork" {
    name                = "myVnet"
    address_space       = ["10.0.0.0/16"]
    location            = "westus2"
    resource_group_name = azurerm_resource_group.myterraformgroup.name

    tags = {
        environment = "Terraform Demo"
    }
}
endsnippet

snippet resource-subnet
resource "azurerm_subnet" "myterraformsubnet" {
    name                 = "mySubnet"
    resource_group_name  = azurerm_resource_group.myterraformgroup.name
    virtual_network_name = azurerm_virtual_network.myterraformnetwork.name
    address_prefix       = "10.0.1.0/24"
}
endsnippet

snippet resoure-public-ips
resource "azurerm_public_ip" "myterraformpublicip" {
    name                         = "myPublicIP"
    location                     = "westus2"
    resource_group_name          = azurerm_resource_group.myterraformgroup.name
    allocation_method            = "Dynamic"

    tags = {
        environment = "Terraform Demo"
    }
}
endsnippet

snippet resource-nsg
resource "azurerm_network_security_group" "myterraformnsg" {
    name                = "myNetworkSecurityGroup"
    location            = "westus2"
    resource_group_name = azurerm_resource_group.myterraformgroup.name
    
    security_rule {
        name                       = "RDP"
        priority                   = 1001
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "Tcp"
        source_port_range          = "*"
        destination_port_range     = "3389"
        source_address_prefix      = "*"
        destination_address_prefix = "*"
    }

    tags = {
        environment = "Terraform Demo"
    }
}
endsnippet

snippet resource-nic
resource "azurerm_network_interface" "myterraformnic" {
    name                      = "myNIC"
    location                  = "westus2"
    resource_group_name       = azurerm_resource_group.myterraformgroup.name
    network_security_group_id = azurerm_network_security_group.myterraformnsg.id

    ip_configuration {
        name                          = "myNicConfiguration"
        subnet_id                     = azurerm_subnet.myterraformsubnet.id
        private_ip_address_allocation = "Dynamic"
        public_ip_address_id          = azurerm_public_ip.myterraformpublicip.id
    }

    tags = {
        environment = "Terraform Demo"
    }
}
endsnippet

snippet resource-random_id "Generate random text for a unique storage account name" -b
resource "random_id" "randomId" {
    keepers = {
        endsnippet
snippet Generate a new ID only when a new resource group is defined
        resource_group = azurerm_resource_group.myterraformgroup.name
    }
    
    byte_length = 8
}
endsnippet

snippet resource-storage 
resource "azurerm_storage_account" "mystorageaccount" {
    name                        = "diag${random_id.randomId.hex}"
    resource_group_name         = azurerm_resource_group.myterraformgroup.name
    location                    = "westus2"
    account_tier                = "Standard"
    account_replication_type    = "LRS"

    tags = {
        environment = "Terraform Demo"
    }
}
endsnippet

snippet resource-vm
resource "azurerm_virtual_machine" "myterraformvm" {
    name                  = "myVM"
    location              = "westus2"
    resource_group_name   = azurerm_resource_group.myterraformgroup.name
    network_interface_ids = [azurerm_network_interface.myterraformnic.id]
    vm_size               = "Standard_DS1_v2"

    storage_os_disk {
        name              = "myOsDisk"
        caching           = "ReadWrite"
        create_option     = "FromImage"
        managed_disk_type = "Premium_LRS"
    }


  storage_image_reference {
      publisher = "MicrosoftWindowsServer"
      offer     = "WindowsServer"
      sku       = "2016-Datacenter"
      version   = "latest"
    }

    os_profile {
        computer_name  = "myvm"
        admin_username = "azureuser"
        admin_password = "complexPassW0rd!"
    }

	# with secret
	# admin_username = "${var.keyvault_secret}"
	# admin_password = "${data.azurerm_key_vault_secret.secret.value}"

    os_profile_windows_config {
      provision_vm_agent = true
    }

    boot_diagnostics {
        enabled = "true"
        storage_uri = azurerm_storage_account.mystorageaccount.primary_blob_endpoint
    }

    tags = {
        environment = "Terraform Demo"
    }
}
endsnippet

snippet keyvault-secret
# variables (can be moved to another file if needed)
variable "keyvault-resourcegroup" {
  default = "nwm-keyvault-rg"
}

variable "keyvault_name" {
  default = "nwm-admin-key-vault"
}

variable "keyvault_secret" {
  default = "nwmadmin"
}

# data
data "azurerm_resource_group" "keyvault-resourcegroup" {
  name = "${var.keyvault-resourcegroup}"
}

data "azurerm_key_vault" "keyvault" {
  name = "${var.keyvault_name}" 
  resource_group_name = "${data.azurerm_resource_group.keyvault-resourcegroup.name}" 
}

data "azurerm_key_vault_secret" "secret" {
  name = "${var.keyvault_secret}"
  vault_uri = "${data.azurerm_key_vault.keyvault.vault_uri}"
}
endsnippet
