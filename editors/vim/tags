!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
<Plug>ToggleBackground	vim-colors-solarized/autoload/togglebg.vim	/^inoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>a$/;"	m
<Plug>ToggleBackground	vim-colors-solarized/autoload/togglebg.vim	/^nnoremap <unique> <script> <Plug>ToggleBackground <SID>TogBG$/;"	m
<Plug>ToggleBackground	vim-colors-solarized/autoload/togglebg.vim	/^vnoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>gv$/;"	m
<SID>TogBG	vim-colors-solarized/autoload/togglebg.vim	/^noremap <SID>TogBG  :call <SID>TogBG()<CR>$/;"	m
BIN_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^BIN_DIR=$(PWD)\/bin$/;"	m
BUILD_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^BUILD_DIR=$(PWD)\/build$/;"	m
DIST_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^DIST_DIR=$(PWD)\/dist$/;"	m
DOCBOOK_BUILD_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^DOCBOOK_BUILD_DIR=$(BUILD_DIR)\/docbook$/;"	m
DOCBOOK_SHARE_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^DOCBOOK_SHARE_DIR=$(SHARE_DIR)\/docbook$/;"	m
DOCBOOK_SRC_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^DOCBOOK_SRC_DIR=$(SRC_DIR)\/docbook$/;"	m
DOC_DIR	zsh-syntax-highlighting/Makefile	/^DOC_DIR?=$(DESTDIR)$(PREFIX)\/share\/doc\/$(NAME)$/;"	m
EXAMPLES_SRC_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^EXAMPLES_SRC_DIR=$(SRC_DIR)\/examples$/;"	m
HEADER_FILES	zsh-autosuggestions/Makefile	/^HEADER_FILES := \\$/;"	m
HTML_XSL	powerlevel9k/shunit2/source/2.0/Makefile	/^HTML_XSL=$(SHARE_DIR)\/docbook\/tldp-xsl\/21MAR2004\/html\/tldp-one-page.xsl$/;"	m
INSTALL	zsh-syntax-highlighting/Makefile	/^INSTALL?=install -c$/;"	m
LIB_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^LIB_DIR=$(PWD)\/lib$/;"	m
NAME	zsh-syntax-highlighting/Makefile	/^NAME=zsh-syntax-highlighting$/;"	m
PLUGIN_TARGET	zsh-autosuggestions/Makefile	/^PLUGIN_TARGET := zsh-autosuggestions.zsh$/;"	m
PREFIX	zsh-syntax-highlighting/Makefile	/^PREFIX?=\/usr\/local$/;"	m
PROG	powerlevel9k/shunit2/source/2.0/Makefile	/^PROG=shunit2$/;"	m
SHARE_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^SHARE_DIR=$(PWD)\/share$/;"	m
SHARE_DIR	zsh-syntax-highlighting/Makefile	/^SHARE_DIR?=$(DESTDIR)$(PREFIX)\/share\/$(NAME)$/;"	m
SHELL_SRC_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^SHELL_SRC_DIR=$(SRC_DIR)\/shell$/;"	m
SRC_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^SRC_DIR=$(PWD)\/src$/;"	m
SRC_DIR	zsh-autosuggestions/Makefile	/^SRC_DIR    := .\/src$/;"	m
SRC_FILES	zsh-autosuggestions/Makefile	/^SRC_FILES := \\$/;"	m
SetOption	vim-colors-solarized/colors/solarized.vim	/^function! s:SetOption(name,default)$/;"	f
SolarizedHiTrail	vim-colors-solarized/colors/solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	vim-colors-solarized/colors/solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	vim-colors-solarized/colors/solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedOptions()$/;"	f
TEST_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^TEST_DIR=$(PWD)\/test$/;"	m
TEST_SRC_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^TEST_SRC_DIR=$(SRC_DIR)\/test$/;"	m
TMP_DIR	powerlevel9k/shunit2/source/2.0/Makefile	/^TMP_DIR=$(PWD)\/tmp$/;"	m
TerminalSession	zsh-autosuggestions/spec/terminal_session.rb	/^class TerminalSession$/;"	c
TogBG	vim-colors-solarized/autoload/togglebg.vim	/^function! s:TogBG()$/;"	f
ToggleBG	vim-colors-solarized/autoload/togglebg.vim	/^    command ToggleBG :call s:TogBG()$/;"	c
ToggleBackground	vim-colors-solarized/autoload/togglebg.vim	/^function! ToggleBackground()$/;"	f
ToolBar.togglebg	vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>a$/;"	m
ToolBar.togglebg	vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> ToolBar.togglebg <SID>TogBG$/;"	m
ToolBar.togglebg	vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>gv$/;"	m
Window.Toggle\	vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>a$/;"	m
Window.Toggle\	vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> Window.Toggle\\ Background <SID>TogBG$/;"	m
Window.Toggle\	vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>gv$/;"	m
ZSH	zsh-syntax-highlighting/Makefile	/^ZSH?=zsh # zsh binary to run tests with$/;"	m
_shunit_assertFail	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_assertFail()$/;"	f
_shunit_assertPass	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_assertPass()$/;"	f
_shunit_assertSkip	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_assertSkip()$/;"	f
_shunit_cleanup	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_cleanup()$/;"	f
_shunit_error	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_error() { echo "shunit2:ERROR $@" >&2; }$/;"	f
_shunit_escapeCharInStr	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_escapeCharInStr()$/;"	f
_shunit_escapeCharactersInString	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_escapeCharactersInString()$/;"	f
_shunit_execSuite	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_execSuite()$/;"	f
_shunit_extractTestFunctions	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_extractTestFunctions()$/;"	f
_shunit_fatal	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_fatal() { echo "shunit2:FATAL $@" >&2; exit ${SHUNIT_ERROR}; }$/;"	f
_shunit_generateReport	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_generateReport()$/;"	f
_shunit_mktempDir	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_mktempDir()$/;"	f
_shunit_mktempFunc	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_mktempFunc()$/;"	f
_shunit_prepForSourcing	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_prepForSourcing()$/;"	f
_shunit_shouldSkip	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_shouldSkip()$/;"	f
_shunit_warn	powerlevel9k/shunit2/source/2.1/src/shunit2	/^_shunit_warn() { echo "shunit2:WARN $@" >&2; }$/;"	f
_versions_have_strings	powerlevel9k/shunit2/source/2.1/lib/versions	/^_versions_have_strings()$/;"	f
_z	z/z.sh	/^_z() {$/;"	f
_z_dirs	z/z.sh	/^    _z_dirs () {$/;"	f
_z_precmd	z/z.sh	/^            _z_precmd() {$/;"	f
_z_zsh_tab_completion	z/z.sh	/^    _z_zsh_tab_completion() {$/;"	f
_zsh_autosuggest_accept	zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_accept() {$/;"	f
_zsh_autosuggest_accept	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_accept() {$/;"	f
_zsh_autosuggest_async_pty_create	zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_pty_create() {$/;"	f
_zsh_autosuggest_async_pty_create	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_pty_create() {$/;"	f
_zsh_autosuggest_async_pty_destroy	zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_pty_destroy() {$/;"	f
_zsh_autosuggest_async_pty_destroy	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_pty_destroy() {$/;"	f
_zsh_autosuggest_async_pty_recreate	zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_pty_recreate() {$/;"	f
_zsh_autosuggest_async_pty_recreate	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_pty_recreate() {$/;"	f
_zsh_autosuggest_async_request	zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_request() {$/;"	f
_zsh_autosuggest_async_request	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_request() {$/;"	f
_zsh_autosuggest_async_response	zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_response() {$/;"	f
_zsh_autosuggest_async_response	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_response() {$/;"	f
_zsh_autosuggest_async_server	zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_server() {$/;"	f
_zsh_autosuggest_async_server	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_server() {$/;"	f
_zsh_autosuggest_async_start	zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_start() {$/;"	f
_zsh_autosuggest_async_start	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_start() {$/;"	f
_zsh_autosuggest_bind_widget	zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_bind_widget() {$/;"	f
_zsh_autosuggest_bind_widget	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_bind_widget() {$/;"	f
_zsh_autosuggest_bind_widgets	zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_bind_widgets() {$/;"	f
_zsh_autosuggest_bind_widgets	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_bind_widgets() {$/;"	f
_zsh_autosuggest_clear	zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_clear() {$/;"	f
_zsh_autosuggest_clear	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_clear() {$/;"	f
_zsh_autosuggest_disable	zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_disable() {$/;"	f
_zsh_autosuggest_disable	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_disable() {$/;"	f
_zsh_autosuggest_enable	zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_enable() {$/;"	f
_zsh_autosuggest_enable	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_enable() {$/;"	f
_zsh_autosuggest_escape_command	zsh-autosuggestions/src/util.zsh	/^_zsh_autosuggest_escape_command() {$/;"	f
_zsh_autosuggest_escape_command	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_escape_command() {$/;"	f
_zsh_autosuggest_execute	zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_execute() {$/;"	f
_zsh_autosuggest_execute	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_execute() {$/;"	f
_zsh_autosuggest_feature_detect_zpty_returns_fd	zsh-autosuggestions/src/features.zsh	/^_zsh_autosuggest_feature_detect_zpty_returns_fd() {$/;"	f
_zsh_autosuggest_feature_detect_zpty_returns_fd	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_feature_detect_zpty_returns_fd() {$/;"	f
_zsh_autosuggest_fetch	zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_fetch() {$/;"	f
_zsh_autosuggest_fetch	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_fetch() {$/;"	f
_zsh_autosuggest_get_bind_count	zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_get_bind_count() {$/;"	f
_zsh_autosuggest_get_bind_count	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_get_bind_count() {$/;"	f
_zsh_autosuggest_highlight_apply	zsh-autosuggestions/src/highlight.zsh	/^_zsh_autosuggest_highlight_apply() {$/;"	f
_zsh_autosuggest_highlight_apply	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_highlight_apply() {$/;"	f
_zsh_autosuggest_highlight_reset	zsh-autosuggestions/src/highlight.zsh	/^_zsh_autosuggest_highlight_reset() {$/;"	f
_zsh_autosuggest_highlight_reset	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_highlight_reset() {$/;"	f
_zsh_autosuggest_incr_bind_count	zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_incr_bind_count() {$/;"	f
_zsh_autosuggest_incr_bind_count	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_incr_bind_count() {$/;"	f
_zsh_autosuggest_invoke_original_widget	zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_invoke_original_widget() {$/;"	f
_zsh_autosuggest_invoke_original_widget	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_invoke_original_widget() {$/;"	f
_zsh_autosuggest_modify	zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_modify() {$/;"	f
_zsh_autosuggest_modify	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_modify() {$/;"	f
_zsh_autosuggest_partial_accept	zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_partial_accept() {$/;"	f
_zsh_autosuggest_partial_accept	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_partial_accept() {$/;"	f
_zsh_autosuggest_start	zsh-autosuggestions/src/start.zsh	/^_zsh_autosuggest_start() {$/;"	f
_zsh_autosuggest_start	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_start() {$/;"	f
_zsh_autosuggest_strategy_default	zsh-autosuggestions/src/strategies/default.zsh	/^_zsh_autosuggest_strategy_default() {$/;"	f
_zsh_autosuggest_strategy_default	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_default() {$/;"	f
_zsh_autosuggest_strategy_match_prev_cmd	zsh-autosuggestions/src/strategies/match_prev_cmd.zsh	/^_zsh_autosuggest_strategy_match_prev_cmd() {$/;"	f
_zsh_autosuggest_strategy_match_prev_cmd	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_match_prev_cmd() {$/;"	f
_zsh_autosuggest_suggest	zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_suggest() {$/;"	f
_zsh_autosuggest_suggest	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_suggest() {$/;"	f
_zsh_autosuggest_toggle	zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_toggle() {$/;"	f
_zsh_autosuggest_toggle	zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_toggle() {$/;"	f
_zsh_highlight	zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight()$/;"	f
_zsh_highlight_add_highlight	zsh-syntax-highlighting/highlighters/main/test-data/inheritance.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	zsh-syntax-highlighting/tests/generate.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	zsh-syntax-highlighting/tests/test-highlighting.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_apply_zle_highlight	zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_apply_zle_highlight() {$/;"	f
_zsh_highlight_bind_widgets	zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_bind_widgets()$/;"	f
_zsh_highlight_brackets_match	zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_brackets_match()$/;"	f
_zsh_highlight_buffer_modified	zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_buffer_modified()$/;"	f
_zsh_highlight_call_widget	zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_call_widget()$/;"	f
_zsh_highlight_cursor_moved	zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_cursor_moved()$/;"	f
_zsh_highlight_highlighter_brackets_paint	zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_highlighter_brackets_paint()$/;"	f
_zsh_highlight_highlighter_brackets_predicate	zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_highlighter_brackets_predicate()$/;"	f
_zsh_highlight_highlighter_cursor_paint	zsh-syntax-highlighting/highlighters/cursor/cursor-highlighter.zsh	/^_zsh_highlight_highlighter_cursor_paint()$/;"	f
_zsh_highlight_highlighter_cursor_predicate	zsh-syntax-highlighting/highlighters/cursor/cursor-highlighter.zsh	/^_zsh_highlight_highlighter_cursor_predicate()$/;"	f
_zsh_highlight_highlighter_line_paint	zsh-syntax-highlighting/highlighters/line/line-highlighter.zsh	/^_zsh_highlight_highlighter_line_paint()$/;"	f
_zsh_highlight_highlighter_line_predicate	zsh-syntax-highlighting/highlighters/line/line-highlighter.zsh	/^_zsh_highlight_highlighter_line_predicate()$/;"	f
_zsh_highlight_highlighter_main_paint	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_highlighter_main_paint()$/;"	f
_zsh_highlight_highlighter_main_predicate	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_highlighter_main_predicate()$/;"	f
_zsh_highlight_highlighter_pattern_paint	zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_highlighter_pattern_paint()$/;"	f
_zsh_highlight_highlighter_pattern_predicate	zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_highlighter_pattern_predicate()$/;"	f
_zsh_highlight_highlighter_regexp_paint	zsh-syntax-highlighting/highlighters/regexp/regexp-highlighter.zsh	/^_zsh_highlight_highlighter_regexp_paint()$/;"	f
_zsh_highlight_highlighter_regexp_predicate	zsh-syntax-highlighting/highlighters/regexp/regexp-highlighter.zsh	/^_zsh_highlight_highlighter_regexp_predicate()$/;"	f
_zsh_highlight_highlighter_root_paint	zsh-syntax-highlighting/highlighters/root/root-highlighter.zsh	/^_zsh_highlight_highlighter_root_paint()$/;"	f
_zsh_highlight_highlighter_root_predicate	zsh-syntax-highlighting/highlighters/root/root-highlighter.zsh	/^_zsh_highlight_highlighter_root_predicate()$/;"	f
_zsh_highlight_load_highlighters	zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_load_highlighters()$/;"	f
_zsh_highlight_main__is_redirection	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__is_redirection() {$/;"	f
_zsh_highlight_main__precmd_hook	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__precmd_hook() {$/;"	f
_zsh_highlight_main__resolve_alias	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__resolve_alias() {$/;"	f
_zsh_highlight_main__stack_pop	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__stack_pop() {$/;"	f
_zsh_highlight_main__type	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__type() {$/;"	f
_zsh_highlight_main_add_many_region_highlights	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_add_many_region_highlights() {$/;"	f
_zsh_highlight_main_add_region_highlight	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_add_region_highlight() {$/;"	f
_zsh_highlight_main_highlighter_check_assign	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_check_assign()$/;"	f
_zsh_highlight_main_highlighter_check_path	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_check_path()$/;"	f
_zsh_highlight_main_highlighter_expand_path	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_expand_path()$/;"	f
_zsh_highlight_main_highlighter_highlight_argument	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_argument()$/;"	f
_zsh_highlight_main_highlighter_highlight_backtick	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_backtick()$/;"	f
_zsh_highlight_main_highlighter_highlight_dollar_quote	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_dollar_quote()$/;"	f
_zsh_highlight_main_highlighter_highlight_double_quote	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_double_quote()$/;"	f
_zsh_highlight_main_highlighter_highlight_path_separators	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_path_separators()$/;"	f
_zsh_highlight_main_highlighter_highlight_single_quote	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_single_quote()$/;"	f
_zsh_highlight_pattern_highlighter_loop	zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_pattern_highlighter_loop()$/;"	f
_zsh_highlight_preexec_hook	zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_preexec_hook()$/;"	f
_zsh_highlight_regexp_highlighter_loop	zsh-syntax-highlighting/highlighters/regexp/regexp-highlighter.zsh	/^_zsh_highlight_regexp_highlighter_loop()$/;"	f
alias1	zsh-syntax-highlighting/highlighters/main/test-data/alias.zsh	/^alias1() {} # to check that it's highlighted as an alias, not as a function$/;"	f
arg0	zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^        function arg0$/;"	f
assertEquals	powerlevel9k/shunit2/source/2.1/src/shunit2	/^assertEquals()$/;"	f
assertFalse	powerlevel9k/shunit2/source/2.1/src/shunit2	/^assertFalse()$/;"	f
assertNotEquals	powerlevel9k/shunit2/source/2.1/src/shunit2	/^assertNotEquals()$/;"	f
assertNotNull	powerlevel9k/shunit2/source/2.1/src/shunit2	/^assertNotNull()$/;"	f
assertNotSame	powerlevel9k/shunit2/source/2.1/src/shunit2	/^assertNotSame()$/;"	f
assertNull	powerlevel9k/shunit2/source/2.1/src/shunit2	/^assertNull()$/;"	f
assertSame	powerlevel9k/shunit2/source/2.1/src/shunit2	/^assertSame()$/;"	f
assertTrue	powerlevel9k/shunit2/source/2.1/src/shunit2	/^assertTrue()$/;"	f
attach!	zsh-autosuggestions/spec/terminal_session.rb	/^  def attach!$/;"	f	class:TerminalSession
build_and_run	powerlevel9k/test-in-docker	/^build_and_run() {$/;"	f
cd	zsh-syntax-highlighting/highlighters/main/test-data/function.zsh	/^cd() {$/;"	f
check_for_known_issues	powerlevel9k/test-in-docker	/^check_for_known_issues() {$/;"	f
clear_screen	zsh-autosuggestions/spec/terminal_session.rb	/^  def clear_screen$/;"	f	class:TerminalSession
colors_name	vim-colors-solarized/colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
colors_name	vim-monokai/colors/monokai.vim	/^let colors_name = "monokai"$/;"	v
common	z/z.sh	/^            function common(matches) {$/;"	f
commonEqualsSame	powerlevel9k/shunit2/source/2.0/src/test/testAsserts	/^commonEqualsSame()$/;"	f
commonEqualsSame	powerlevel9k/shunit2/source/2.1/src/shunit2_test_asserts.sh	/^commonEqualsSame()$/;"	f
commonNotEqualsSame	powerlevel9k/shunit2/source/2.0/src/test/testFailures	/^commonNotEqualsSame()$/;"	f
commonNotEqualsSame	powerlevel9k/shunit2/source/2.1/src/shunit2_test_asserts.sh	/^commonNotEqualsSame()$/;"	f
content	zsh-autosuggestions/spec/terminal_session.rb	/^  def content(esc_seqs: false)$/;"	f	class:TerminalSession
cursor	zsh-autosuggestions/spec/terminal_session.rb	/^  def cursor$/;"	f	class:TerminalSession
defined	powerlevel9k/functions/utilities.zsh	/^function defined() {$/;"	f
destroy	zsh-autosuggestions/spec/terminal_session.rb	/^  def destroy$/;"	f	class:TerminalSession
die	powerlevel9k/shunit2/source/2.1/bin/gen_test_results.sh	/^die()$/;"	f
endSkipping	powerlevel9k/shunit2/source/2.1/src/shunit2	/^endSkipping()$/;"	f
err	powerlevel9k/test-in-docker	/^err()$/;"	f
f	zsh-syntax-highlighting/highlighters/main/test-data/off-by-one.zsh	/^f() {}$/;"	f
fail	powerlevel9k/shunit2/source/2.1/src/shunit2	/^fail()$/;"	f
failNotEquals	powerlevel9k/shunit2/source/2.1/src/shunit2	/^failNotEquals()$/;"	f
failNotSame	powerlevel9k/shunit2/source/2.1/src/shunit2	/^failNotSame()$/;"	f
failSame	powerlevel9k/shunit2/source/2.1/src/shunit2	/^failSame()$/;"	f
frecent	z/z.sh	/^            function frecent(rank, time) {$/;"	f
g:loaded_togglebg	vim-colors-solarized/autoload/togglebg.vim	/^let g:loaded_togglebg = 1$/;"	v
g:monokai_gui_italic	vim-monokai/colors/monokai.vim	/^    let g:monokai_gui_italic = 1$/;"	v
g:monokai_term_italic	vim-monokai/colors/monokai.vim	/^    let g:monokai_term_italic = 0$/;"	v
g:monokai_termcolors	vim-monokai/colors/monokai.vim	/^let g:monokai_termcolors = 256 " does not support 16 color term right now.$/;"	v
getColorCode	powerlevel9k/functions/colors.zsh	/^function getColorCode() {$/;"	f
getRelevantItem	powerlevel9k/functions/utilities.zsh	/^function getRelevantItem() {$/;"	f
get_icon_names	powerlevel9k/functions/icons.zsh	/^get_icon_names() {$/;"	f
get_term	powerlevel9k/debug/font-issues.zsh	/^get_term() {$/;"	f
get_term_font	powerlevel9k/debug/font-issues.zsh	/^get_term_font() {$/;"	f
get_url	powerlevel9k/shunit2/source/2.0/bin/docbookPrep.sh	/^get_url()$/;"	f
h	vim-monokai/colors/monokai.vim	/^function! s:h(group, style)$/;"	f
hs_highlight_boolean	vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
initialize	zsh-autosuggestions/spec/terminal_session.rb	/^  def initialize(opts = {})$/;"	f	class:TerminalSession
introduction	powerlevel9k/shunit2/source/2.0/doc/shunit2.html	/^          <\/p><\/div><\/div><\/div><\/div><\/div><div><p class="pubdate">2007-07-12<\/p><\/div><div><div class="revhistory"><table border="1" width="100%" summary="Revision history"><tr><th align="left" valign="top" colspan="3"><b>Revision History<\/b><\/th><\/tr><tr><td align="left">Revision 2.0.3<\/td><td align="left">2007-07-12<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.2<\/td><td align="left">2007-04-22<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.1<\/td><td align="left">2007-02-21<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><tr><td align="left">Revision 2.0.0<\/td><td align="left">2007-02-20<\/td><td align="left">Kate Ward &lt;kate.ward@forestent.com&gt;<\/td><\/tr><\/table><\/div><\/div><div><div class="abstract"><p class="title"><b>Abstract<\/b><\/p><p><a href="http:\/\/sourceforge.net\/projects\/shunit2" target="_top">shUnit2<\/a> is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><\/div><\/div><\/div><hr><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="chapter"><a href="#introduction">1. Introduction<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/dd><dt><span class="chapter"><a href="#quickstart">2. Quickstart<\/a><\/span><\/dt><dt><span class="chapter"><a href="#shelldoc">3. Function Reference<\/a><\/span><\/dt><dd><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">3. suites<\/a><\/span><\/dt><\/dl><\/dd><\/dl><\/div><div class="list-of-tables"><p><b>List of Tables<\/b><\/p><dl><dt>3.1. <a href="#shelldoc-function-asserts">asserts<\/a><\/dt><dt>3.2. <a href="#shelldoc-function-failures">failures<\/a><\/dt><dt>3.3. <a href="#shelldoc-function-suites">suites<\/a><\/dt><\/dl><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="introduction"><\/a>Chapter 1. Introduction<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#credits">1. Credits \/ Contributors<\/a><\/span><\/dt><dt><span class="section"><a href="#feedback">2. Feedback<\/a><\/span><\/dt><\/dl><\/div><p>shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to <a href="http:\/\/www.junit.org\/" target="_top">JUnit<\/a>, <a href="http:\/\/pyunit.sourceforge.net\/" target="_top">PyUnit<\/a>, etc.<\/p><p>shUnit2 was originally developed to provide a consistent testing solution for <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>, a shell based logging framework similar to log4j. During the development of that product, the problem of having things work just fine under one shell (<code class="filename">\/bin\/bash<\/code> on Linux to be specific), and then not working under another shell (<code class="filename">\/bin\/sh<\/code> on Solaris), kept coming up. Although there were several simple tests ran, they were not adaquate and did not catch very many corner cases. The decision was finally made to write a proper unit test framework after after multiple brown-bag releases were made.<\/p><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Operating Systems<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p><a href="http:\/\/www.cygwin.com\/" target="_top">Cygwin<\/a><\/p><\/li><li><p><a href="http:\/\/www.freebsd.org\/" target="_top">FreeBSD<\/a> (user supported)<\/p><\/li><li><p>Linux (<a href="http:\/\/www.gentoo.org\/" target="_top">Gentoo<\/a>, <a href="http:\/\/www.ubuntu.com\/" target="_top">Ubuntu<\/a>)<\/p><\/li><li><p><a href="http:\/\/www.apple.com\/macosx\/" target="_top">Mac OS X<\/a><\/p><\/li><li><p><a href="http:\/\/www.sun.com\/software\/solaris\/" target="_top">Solaris<\/a> 8, 9, 10<\/p><\/li><\/ul><\/div><\/blockquote><\/div><div class="blockquote"><blockquote class="blockquote"><div class="blockquote-title"><p><b>Tested Shells<\/b><\/p><\/div><div class="itemizedlist"><ul type="disc"><li><p>Bourne Shell (<span><strong class="command">sh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.gnu.org\/software\/bash\/" target="_top">BASH<\/a> - GNU Bourne Again SHell (<span><strong class="command">bash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/gondor.apana.org.au\/~herbert\/dash\/" target="_top">DASH<\/a> (<span><strong class="command">dash<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/www.kornshell.com\/" target="_top">Korn Shell<\/a> (<span><strong class="command">ksh<\/strong><\/span>)<\/p><\/li><li><p><a href="http:\/\/web.cs.mun.ca\/~michael\/pdksh\/" target="_top">pdksh<\/a> - Public Domain Korn Shell (<span><strong class="command">pdksh<\/strong><\/span>)<\/p><\/li><\/ul><\/div><\/blockquote><\/div><p>See the appropriate Release Notes (<code class="filename">doc\/RELEASE_NOTES-X.X.X.txt<\/code>) for this release for the actual versions tested.<\/p><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="credits"><\/a>1. Credits \/ Contributors<\/h2><\/div><\/div><\/div><p>A list of contributors to shUnit2 can be found in the source archive as <code class="filename">doc\/contributors.txt<\/code>. I want to personally thank all those who have contributed to make this a better tool.<\/p><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="feedback"><\/a>2. Feedback<\/h2><\/div><\/div><\/div><p>Feedback is most certainly welcome for this document. Send your additions, comments and criticisms to the following email address: <code class="email">&lt;<a href="mailto:kate.ward@forestent.com">kate.ward@forestent.com<\/a>&gt;<\/code>.<\/p><\/div><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="quickstart"><\/a>Chapter 2. Quickstart<\/h2><\/div><\/div><\/div><p>This chapter will give a very quick start to running unit tests with shUnit2. More information is located in other chapters.<\/p><p>Here is a quick sample script to show how easy it is to write a unit test in shell. It expects that you have a copy of <span><strong class="command">shunit2<\/strong><\/span> in the same directory as the script.<\/p><pre class="programlisting">$/;"	a
isSameColor	powerlevel9k/functions/colors.zsh	/^function isSameColor() {$/;"	f
isSkipping	powerlevel9k/shunit2/source/2.1/src/shunit2	/^isSkipping()$/;"	f
ls	zsh-syntax-highlighting/highlighters/main/test-data/function.zsh	/^ls() {$/;"	f
main	powerlevel9k/shunit2/source/2.1/bin/gen_test_results.sh	/^main()$/;"	f
main	powerlevel9k/shunit2/source/2.1/src/shunit2_test_standalone.sh	/^main()$/;"	f
mockGo	powerlevel9k/test/segments/go_version.spec	/^function mockGo() {$/;"	f
mockGoEmptyGopath	powerlevel9k/test/segments/go_version.spec	/^function mockGoEmptyGopath() {$/;"	f
mockKubectl	powerlevel9k/test/segments/kubecontext.spec	/^function mockKubectl() {$/;"	f
mockKubectlOtherNamespace	powerlevel9k/test/segments/kubecontext.spec	/^function mockKubectlOtherNamespace() {$/;"	f
mockRust	powerlevel9k/test/segments/rust_version.spec	/^function mockRust() {$/;"	f
oneTimeSetUp	powerlevel9k/shunit2/source/2.1/examples/math_test.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	powerlevel9k/shunit2/source/2.1/examples/mkdir_test.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	powerlevel9k/shunit2/source/2.1/src/shunit2_test_asserts.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	powerlevel9k/shunit2/source/2.1/src/shunit2_test_failures.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	powerlevel9k/shunit2/source/2.1/src/shunit2_test_macros.sh	/^oneTimeSetUp()$/;"	f
oneTimeSetUp	powerlevel9k/shunit2/source/2.1/src/shunit2_test_misc.sh	/^oneTimeSetUp()$/;"	f
output	z/z.sh	/^            function output(matches, best_match, common) {$/;"	f
paste_string	zsh-autosuggestions/spec/terminal_session.rb	/^  def paste_string(str)$/;"	f	class:TerminalSession
printSizeHumanReadable	powerlevel9k/functions/utilities.zsh	/^printSizeHumanReadable() {$/;"	f
print_deprecation_warning	powerlevel9k/functions/utilities.zsh	/^print_deprecation_warning() {$/;"	f
print_icon	powerlevel9k/functions/icons.zsh	/^function print_icon() {$/;"	f
resolve_framework	powerlevel9k/test-in-docker	/^resolve_framework() {$/;"	f
resolve_version	powerlevel9k/test-in-docker	/^resolve_version() {$/;"	f
run_command	zsh-autosuggestions/spec/terminal_session.rb	/^  def run_command(command)$/;"	f	class:TerminalSession
run_test	zsh-syntax-highlighting/tests/test-highlighting.zsh	/^run_test() {$/;"	f
run_test	zsh-syntax-highlighting/tests/test-perfs.zsh	/^run_test() {$/;"	f
run_test_internal	zsh-syntax-highlighting/tests/test-highlighting.zsh	/^run_test_internal() {$/;"	f
run_test_internal	zsh-syntax-highlighting/tests/test-perfs.zsh	/^run_test_internal() {$/;"	f
s:addbg	vim-monokai/colors/monokai.vim	/^let s:addbg       = { "gui": "#5f875f", "cterm": "65" }$/;"	v
s:addfg	vim-monokai/colors/monokai.vim	/^let s:addfg       = { "gui": "#d7ffaf", "cterm": "193" }$/;"	v
s:aqua	vim-monokai/colors/monokai.vim	/^let s:aqua        = { "gui": "#66d9ef", "cterm": "81" }$/;"	v
s:b	vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:b	vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:bb	vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:black	vim-monokai/colors/monokai.vim	/^let s:black       = { "gui": "#272822", "cterm": "234" }$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:bright	vim-colors-solarized/colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:c	vim-colors-solarized/colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:changebg	vim-monokai/colors/monokai.vim	/^let s:changebg    = { "gui": "#5f5f87", "cterm": "60" }$/;"	v
s:changefg	vim-monokai/colors/monokai.vim	/^let s:changefg    = { "gui": "#d7d7ff", "cterm": "189" }$/;"	v
s:colorscheme_list	vim-colors-solarized/colors/solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:darkblack	vim-monokai/colors/monokai.vim	/^let s:darkblack   = { "gui": "#211F1C", "cterm": "233" }$/;"	v
s:darkgrey	vim-monokai/colors/monokai.vim	/^let s:darkgrey    = { "gui": "#64645e", "cterm": "239" }$/;"	v
s:darkred	vim-monokai/colors/monokai.vim	/^let s:darkred     = { "gui": "#5f0000", "cterm": "52" }$/;"	v
s:defaults_list	vim-colors-solarized/colors/solarized.vim	/^let s:defaults_list=[$/;"	v
s:delbg	vim-monokai/colors/monokai.vim	/^let s:delbg       = { "gui": "#f75f5f", "cterm": "167" }$/;"	v
s:fg_pdef	vim-colors-solarized/colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	vim-colors-solarized/colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	vim-colors-solarized/colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:green	vim-monokai/colors/monokai.vim	/^let s:green       = { "gui": "#A6E22D", "cterm": "148" }$/;"	v
s:grey	vim-monokai/colors/monokai.vim	/^let s:grey        = { "gui": "#8F908A", "cterm": "243" }$/;"	v
s:i	vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:lazycat_list	vim-colors-solarized/colors/solarized.vim	/^let s:lazycat_list=[$/;"	v
s:lightblack	vim-monokai/colors/monokai.vim	/^let s:lightblack  = { "gui": "#2D2E27", "cterm": "235" }$/;"	v
s:lightblack2	vim-monokai/colors/monokai.vim	/^let s:lightblack2 = { "gui": "#383a3e", "cterm": "236" }$/;"	v
s:lightgrey	vim-monokai/colors/monokai.vim	/^let s:lightgrey   = { "gui": "#575b61", "cterm": "237" }$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:n	vim-colors-solarized/colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:none	vim-colors-solarized/colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:ob	vim-colors-solarized/colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:options_list	vim-colors-solarized/colors/solarized.vim	/^let s:options_list=[$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:orange	vim-monokai/colors/monokai.vim	/^let s:orange      = { "gui": "#FD9720", "cterm": "208" }$/;"	v
s:ou	vim-colors-solarized/colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	vim-colors-solarized/colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:pink	vim-monokai/colors/monokai.vim	/^let s:pink        = { "gui": "#F92772", "cterm": "197" }$/;"	v
s:purple	vim-monokai/colors/monokai.vim	/^let s:purple      = { "gui": "#ae81ff", "cterm": "141" }$/;"	v
s:r	vim-colors-solarized/colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:red	vim-monokai/colors/monokai.vim	/^let s:red         = { "gui": "#e73c50", "cterm": "196" }$/;"	v
s:s	vim-colors-solarized/colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:solarized_termtrans_default	vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sp_back	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:t_none	vim-colors-solarized/colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:temp00	vim-colors-solarized/colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	vim-colors-solarized/colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	vim-colors-solarized/colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	vim-colors-solarized/colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:terminal_italic	vim-colors-solarized/colors/solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terms_italic	vim-colors-solarized/colors/solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	vim-colors-solarized/colors/solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:u	vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:vmode	vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:warmgrey	vim-monokai/colors/monokai.vim	/^let s:warmgrey    = { "gui": "#75715E", "cterm": "59" }$/;"	v
s:white	vim-monokai/colors/monokai.vim	/^let s:white       = { "gui": "#E8E8E3", "cterm": "252" }$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
s:yellow	vim-monokai/colors/monokai.vim	/^let s:yellow      = { "gui": "#E6DB74", "cterm": "186" }$/;"	v
segmentShouldBeJoined	powerlevel9k/functions/utilities.zsh	/^function segmentShouldBeJoined() {$/;"	f
segment_in_use	powerlevel9k/functions/utilities.zsh	/^segment_in_use() {$/;"	f
send_keys	zsh-autosuggestions/spec/terminal_session.rb	/^  def send_keys(*keys)$/;"	f	class:TerminalSession
send_string	zsh-autosuggestions/spec/terminal_session.rb	/^  def send_string(str)$/;"	f	class:TerminalSession
setUp	powerlevel9k/shunit2/source/2.1/src/shunit2_test_misc.sh	/^setUp()$/;"	f
setUp	powerlevel9k/test/functions/colors.spec	/^function setUp() {$/;"	f
setUp	powerlevel9k/test/functions/icons.spec	/^function setUp() {$/;"	f
setUp	powerlevel9k/test/functions/utilities.spec	/^function setUp() {$/;"	f
setUp	powerlevel9k/test/powerlevel9k.spec	/^function setUp() {$/;"	f
setUp	powerlevel9k/test/segments/command_execution_time.spec	/^function setUp() {$/;"	f
setUp	powerlevel9k/test/segments/dir.spec	/^function setUp() {$/;"	f
setUp	powerlevel9k/test/segments/go_version.spec	/^function setUp() {$/;"	f
setUp	powerlevel9k/test/segments/kubecontext.spec	/^function setUp() {$/;"	f
setUp	powerlevel9k/test/segments/rust_version.spec	/^function setUp() {$/;"	f
setUp	powerlevel9k/test/segments/vcs.spec	/^function setUp() {$/;"	f
set_default	powerlevel9k/functions/utilities.zsh	/^function set_default() {$/;"	f
shUnit2	powerlevel9k/shunit2/source/2.0/doc/shunit2.html	/^<html><head><meta http-equiv="Content-Type" content="text\/html; charset=UTF-8"><title>shUnit2<\/title><link rel="stylesheet" href="style.css" type="text\/css"><meta name="generator" content="DocBook XSL Stylesheets V1.72.0"><meta name="description" content="shUnit2 is a unit test framework for Bourne based shell scripts, and it is designed to work in a similar manner to JUnit, PyUnit, etc."><\/head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="book" lang="en-US"><div class="titlepage"><div><div><h1 class="title"><a name="shUnit2"><\/a>shUnit2 version 2.0.3<\/h1><\/div><div><div class="authorgroup"><div class="author"><h3 class="author"><span class="firstname">Kate<\/span> <span class="surname">Ward<\/span><\/h3><div class="affiliation"><div class="address"><p><br>$/;"	a
shelldoc	powerlevel9k/shunit2/source/2.0/doc/shunit2.html	/^  <\/pre><p>So, what did you get? I guess it told you that this isn't 1999. Bummer, eh? Hopefully, you noticed a couple of things that were different about the second test. First, we added an optional message that the user will see if the assert fails. Second, we did comparisons of strings instead of integers as in the first test. It doesn't matter whether you are testing for equality of strings or integers. Both work equally well with shUnit2.<\/p><p>Hopefully, this is enough to get you started with unit testing. If you want a ton more examples, take a look at the tests provided with <a href="http:\/\/log4sh.sourceforge.net\/" target="_top">log4sh<\/a>. Examples of much more advanced usage can be seen there. shUnit2 was after all written to help with the unit testing problems that log4sh had.<\/p><\/div><div class="chapter" lang="en-US"><div class="titlepage"><div><div><h2 class="title"><a name="shelldoc"><\/a>Chapter 3. Function Reference<\/h2><\/div><\/div><\/div><div class="toc"><p><b>Table of Contents<\/b><\/p><dl><dt><span class="section"><a href="#shelldoc-section-asserts">1. asserts<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-failures">2. failures<\/a><\/span><\/dt><dt><span class="section"><a href="#shelldoc-section-suites">3. suites<\/a><\/span><\/dt><\/dl><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-asserts"><\/a>1. asserts<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-asserts"><\/a><p class="title"><b>Table 3.1. asserts<\/b><\/p><div class="table-contents"><table summary="asserts" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-failures	powerlevel9k/shunit2/source/2.0/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-failures"><\/a>2. failures<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-failures"><\/a><p class="title"><b>Table 3.2. failures<\/b><\/p><div class="table-contents"><table summary="failures" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
shelldoc-section-suites	powerlevel9k/shunit2/source/2.0/doc/shunit2.html	/^            <\/td><\/tr><\/tbody><\/table><\/div><\/div><br class="table-break"><\/div><div class="section" lang="en-US"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="shelldoc-section-suites"><\/a>3. suites<\/h2><\/div><\/div><\/div><div class="table"><a name="shelldoc-function-suites"><\/a><p class="title"><b>Table 3.3. suites<\/b><\/p><div class="table-contents"><table summary="suites" border="1"><colgroup><col><col><\/colgroup><tbody><tr valign="top"><td align="right" valign="top">$/;"	a
show_help	powerlevel9k/test-in-docker	/^show_help() {$/;"	f
startSkipping	powerlevel9k/shunit2/source/2.1/src/shunit2	/^startSkipping()$/;"	f
sudo	zsh-syntax-highlighting/highlighters/main/test-data/sudo-command.zsh	/^sudo(){}$/;"	f
sudo	zsh-syntax-highlighting/highlighters/main/test-data/sudo-comment.zsh	/^sudo(){}$/;"	f
sudo	zsh-syntax-highlighting/highlighters/main/test-data/sudo-redirection.zsh	/^sudo(){}$/;"	f
sudo	zsh-syntax-highlighting/highlighters/main/test-data/sudo-redirection2.zsh	/^sudo(){}$/;"	f
sudo	zsh-syntax-highlighting/highlighters/main/test-data/sudo-redirection3.zsh	/^sudo(){}$/;"	f
suite_addTest	powerlevel9k/shunit2/source/2.1/src/shunit2	/^suite_addTest()$/;"	f
tearDown	powerlevel9k/shunit2/source/2.1/examples/mkdir_test.sh	/^tearDown()$/;"	f
tearDown	powerlevel9k/test/functions/icons.spec	/^function tearDown() {$/;"	f
tearDown	powerlevel9k/test/segments/dir.spec	/^function tearDown() {$/;"	f
testAddTest	powerlevel9k/shunit2/source/2.0/src/test/testSuiteFx	/^testAddTest()$/;"	f
testAdding	powerlevel9k/shunit2/source/2.1/examples/math_test.sh	/^testAdding()$/;"	f
testAllIconsAreDefinedLikeInAwesomeFontconfigMode	powerlevel9k/test/functions/icons.spec	/^function testAllIconsAreDefinedLikeInAwesomeFontconfigMode() {$/;"	f
testAllIconsAreDefinedLikeInAwesomePatchedMode	powerlevel9k/test/functions/icons.spec	/^function testAllIconsAreDefinedLikeInAwesomePatchedMode() {$/;"	f
testAllIconsAreDefinedLikeInDefaultMode	powerlevel9k/test/functions/icons.spec	/^function testAllIconsAreDefinedLikeInDefaultMode() {$/;"	f
testAllIconsAreDefinedLikeInNerdfontFontconfigMode	powerlevel9k/test/functions/icons.spec	/^function testAllIconsAreDefinedLikeInNerdfontFontconfigMode() {$/;"	f
testAssertEquals	powerlevel9k/shunit2/source/2.0/src/test/testAsserts	/^testAssertEquals()$/;"	f
testAssertEquals	powerlevel9k/shunit2/source/2.1/src/shunit2_test_asserts.sh	/^testAssertEquals()$/;"	f
testAssertEquals	powerlevel9k/shunit2/source/2.1/src/shunit2_test_macros.sh	/^testAssertEquals()$/;"	f
testAssertFalse	powerlevel9k/shunit2/source/2.0/src/test/testAsserts	/^testAssertFalse()$/;"	f
testAssertFalse	powerlevel9k/shunit2/source/2.1/src/shunit2_test_asserts.sh	/^testAssertFalse()$/;"	f
testAssertFalse	powerlevel9k/shunit2/source/2.1/src/shunit2_test_macros.sh	/^testAssertFalse()$/;"	f
testAssertNotEquals	powerlevel9k/shunit2/source/2.1/src/shunit2_test_asserts.sh	/^testAssertNotEquals()$/;"	f
testAssertNotEquals	powerlevel9k/shunit2/source/2.1/src/shunit2_test_macros.sh	/^testAssertNotEquals()$/;"	f
testAssertNotNull	powerlevel9k/shunit2/source/2.0/src/test/testAsserts	/^testAssertNotNull()$/;"	f
testAssertNotNull	powerlevel9k/shunit2/source/2.1/src/shunit2_test_asserts.sh	/^testAssertNotNull()$/;"	f
testAssertNotSame	powerlevel9k/shunit2/source/2.0/src/test/testAsserts	/^testAssertNotSame()$/;"	f
testAssertNotSame	powerlevel9k/shunit2/source/2.1/src/shunit2_test_asserts.sh	/^testAssertNotSame()$/;"	f
testAssertNull	powerlevel9k/shunit2/source/2.0/src/test/testAsserts	/^testAssertNull()$/;"	f
testAssertNull	powerlevel9k/shunit2/source/2.1/src/shunit2_test_asserts.sh	/^testAssertNull()$/;"	f
testAssertSame	powerlevel9k/shunit2/source/2.0/src/test/testAsserts	/^testAssertSame()$/;"	f
testAssertSame	powerlevel9k/shunit2/source/2.1/src/shunit2_test_asserts.sh	/^testAssertSame()$/;"	f
testAssertTrue	powerlevel9k/shunit2/source/2.0/src/test/testAsserts	/^testAssertTrue()$/;"	f
testAssertTrue	powerlevel9k/shunit2/source/2.1/src/shunit2_test_asserts.sh	/^testAssertTrue()$/;"	f
testAssertTrue	powerlevel9k/shunit2/source/2.1/src/shunit2_test_macros.sh	/^testAssertTrue()$/;"	f
testChangingDirPathSeparator	powerlevel9k/test/segments/dir.spec	/^function testChangingDirPathSeparator() {$/;"	f
testColorOverridingForCleanStateWorks	powerlevel9k/test/segments/vcs.spec	/^function testColorOverridingForCleanStateWorks() {$/;"	f
testColorOverridingForModifiedStateWorks	powerlevel9k/test/segments/vcs.spec	/^function testColorOverridingForModifiedStateWorks() {$/;"	f
testColorOverridingForUntrackedStateWorks	powerlevel9k/test/segments/vcs.spec	/^function testColorOverridingForUntrackedStateWorks() {$/;"	f
testColoringOfVisualIdentifiersDoesNotOverwriteColoringOfSegment	powerlevel9k/test/powerlevel9k.spec	/^function testColoringOfVisualIdentifiersDoesNotOverwriteColoringOfSegment() {$/;"	f
testCommandExecutionTimeIsFormattedHumandReadbleForHourLongCommand	powerlevel9k/test/segments/command_execution_time.spec	/^function testCommandExecutionTimeIsFormattedHumandReadbleForHourLongCommand() {$/;"	f
testCommandExecutionTimeIsFormattedHumandReadbleForMinuteLongCommand	powerlevel9k/test/segments/command_execution_time.spec	/^function testCommandExecutionTimeIsFormattedHumandReadbleForMinuteLongCommand() {$/;"	f
testCommandExecutionTimeIsNotShownIfTimeIsBelowThreshold	powerlevel9k/test/segments/command_execution_time.spec	/^function testCommandExecutionTimeIsNotShownIfTimeIsBelowThreshold() {$/;"	f
testCommandExecutionTimePrecisionCouldBeChanged	powerlevel9k/test/segments/command_execution_time.spec	/^function testCommandExecutionTimePrecisionCouldBeChanged() {$/;"	f
testCommandExecutionTimePrecisionCouldBeSetToZero	powerlevel9k/test/segments/command_execution_time.spec	/^function testCommandExecutionTimePrecisionCouldBeSetToZero() {$/;"	f
testCommandExecutionTimeThresholdCouldBeChanged	powerlevel9k/test/segments/command_execution_time.spec	/^function testCommandExecutionTimeThresholdCouldBeChanged() {$/;"	f
testCommandExecutionTimeThresholdCouldBeSetToZero	powerlevel9k/test/segments/command_execution_time.spec	/^function testCommandExecutionTimeThresholdCouldBeSetToZero() {$/;"	f
testDefinedDoesNotFindUndefinedVariable	powerlevel9k/test/functions/utilities.spec	/^function testDefinedDoesNotFindUndefinedVariable() {$/;"	f
testDefinedFindsDefinedVariable	powerlevel9k/test/functions/utilities.spec	/^function testDefinedFindsDefinedVariable() {$/;"	f
testDynamicColoringOfSegmentsWork	powerlevel9k/test/powerlevel9k.spec	/^function testDynamicColoringOfSegmentsWork() {$/;"	f
testDynamicColoringOfVisualIdentifiersWork	powerlevel9k/test/powerlevel9k.spec	/^function testDynamicColoringOfVisualIdentifiersWork() {$/;"	f
testEquality	powerlevel9k/shunit2/source/2.1/examples/equality_test.sh	/^testEquality()$/;"	f
testEquality	powerlevel9k/shunit2/source/2.1/examples/party_test.sh	/^testEquality()$/;"	f
testEscapeCharInStr	powerlevel9k/shunit2/source/2.1/src/shunit2_test_misc.sh	/^testEscapeCharInStr()$/;"	f
testEscapeCharInStr_specialChars	powerlevel9k/shunit2/source/2.1/src/shunit2_test_misc.sh	/^testEscapeCharInStr_specialChars()$/;"	f
testExistingDirectoryCreationFails	powerlevel9k/shunit2/source/2.1/examples/mkdir_test.sh	/^testExistingDirectoryCreationFails()$/;"	f
testExtractTestFunctions	powerlevel9k/shunit2/source/2.1/src/shunit2_test_misc.sh	/^testExtractTestFunctions()$/;"	f
testFail	powerlevel9k/shunit2/source/2.0/src/test/testFailures	/^testFail()$/;"	f
testFail	powerlevel9k/shunit2/source/2.1/src/shunit2_test_failures.sh	/^testFail()$/;"	f
testFail	powerlevel9k/shunit2/source/2.1/src/shunit2_test_macros.sh	/^testFail()$/;"	f
testFailNotEquals	powerlevel9k/shunit2/source/2.0/src/test/testFailures	/^testFailNotEquals()$/;"	f
testFailNotEquals	powerlevel9k/shunit2/source/2.1/src/shunit2_test_failures.sh	/^testFailNotEquals()$/;"	f
testFailNotEquals	powerlevel9k/shunit2/source/2.1/src/shunit2_test_macros.sh	/^testFailNotEquals()$/;"	f
testFailNotSame	powerlevel9k/shunit2/source/2.0/src/test/testFailures	/^testFailNotSame()$/;"	f
testFailNotSame	powerlevel9k/shunit2/source/2.1/src/shunit2_test_macros.sh	/^testFailNotSame()$/;"	f
testFailSame	powerlevel9k/shunit2/source/2.0/src/test/testFailures	/^testFailSame()$/;"	f
testFailSame	powerlevel9k/shunit2/source/2.1/src/shunit2_test_failures.sh	/^testFailSame()$/;"	f
testFailSame	powerlevel9k/shunit2/source/2.1/src/shunit2_test_macros.sh	/^testFailSame()$/;"	f
testGenerateReport	powerlevel9k/shunit2/source/2.0/src/test/testInternalFx	/^testGenerateReport()$/;"	f
testGetColorCodeWithAnsiBackgroundColor	powerlevel9k/test/functions/colors.spec	/^function testGetColorCodeWithAnsiBackgroundColor() {$/;"	f
testGetColorCodeWithAnsiForegroundColor	powerlevel9k/test/functions/colors.spec	/^function testGetColorCodeWithAnsiForegroundColor() {$/;"	f
testGetColorCodeWithNumericalColor	powerlevel9k/test/functions/colors.spec	/^function testGetColorCodeWithNumericalColor() {$/;"	f
testGetRelevantItem	powerlevel9k/test/functions/utilities.spec	/^function testGetRelevantItem() {$/;"	f
testGetRelevantItemDoesNotReturnNotFoundItems	powerlevel9k/test/functions/utilities.spec	/^function testGetRelevantItemDoesNotReturnNotFoundItems() {$/;"	f
testGo	powerlevel9k/test/segments/go_version.spec	/^function testGo() {$/;"	f
testGoSegmentPrintsNothingIfEmptyGopath	powerlevel9k/test/segments/go_version.spec	/^function testGoSegmentPrintsNothingIfEmptyGopath() {$/;"	f
testGoSegmentPrintsNothingIfGoIsNotAvailable	powerlevel9k/test/segments/go_version.spec	/^function testGoSegmentPrintsNothingIfGoIsNotAvailable() {$/;"	f
testGoSegmentPrintsNothingIfNotInGopath	powerlevel9k/test/segments/go_version.spec	/^function testGoSegmentPrintsNothingIfNotInGopath() {$/;"	f
testHomeFolderAbbreviation	powerlevel9k/test/segments/dir.spec	/^function testHomeFolderAbbreviation() {$/;"	f
testHomeFolderDetectionWorks	powerlevel9k/test/segments/dir.spec	/^function testHomeFolderDetectionWorks() {$/;"	f
testHomeSubfolderDetectionWorks	powerlevel9k/test/segments/dir.spec	/^function testHomeSubfolderDetectionWorks() {$/;"	f
testIsSameColorComparesAnsiBackgroundAndNumericalColorCorrectly	powerlevel9k/test/functions/colors.spec	/^function testIsSameColorComparesAnsiBackgroundAndNumericalColorCorrectly() {$/;"	f
testIsSameColorComparesAnsiForegroundAndNumericalColorCorrectly	powerlevel9k/test/functions/colors.spec	/^function testIsSameColorComparesAnsiForegroundAndNumericalColorCorrectly() {$/;"	f
testIsSameColorComparesNumericalBackgroundAndNumericalColorCorrectly	powerlevel9k/test/functions/colors.spec	/^function testIsSameColorComparesNumericalBackgroundAndNumericalColorCorrectly() {$/;"	f
testIsSameColorDoesNotYieldNotEqualColorsTruthy	powerlevel9k/test/functions/colors.spec	/^function testIsSameColorDoesNotYieldNotEqualColorsTruthy() {$/;"	f
testIssue7	powerlevel9k/shunit2/source/2.1/src/shunit2_test_misc.sh	/^testIssue7()$/;"	f
testJoinedSegments	powerlevel9k/test/powerlevel9k.spec	/^function testJoinedSegments() {$/;"	f
testJoiningWithConditionalSegment	powerlevel9k/test/powerlevel9k.spec	/^function testJoiningWithConditionalSegment() {$/;"	f
testKubeContext	powerlevel9k/test/segments/kubecontext.spec	/^function testKubeContext() {$/;"	f
testKubeContextOtherNamespace	powerlevel9k/test/segments/kubecontext.spec	/^function testKubeContextOtherNamespace() {$/;"	f
testKubeContextPrintsNothingIfKubectlNotAvailable	powerlevel9k/test/segments/kubecontext.spec	/^function testKubeContextPrintsNothingIfKubectlNotAvailable() {$/;"	f
testLcCtypeIsSetCorrectlyInAwesomeFontconfigMode	powerlevel9k/test/functions/icons.spec	/^function testLcCtypeIsSetCorrectlyInAwesomeFontconfigMode() {$/;"	f
testLcCtypeIsSetCorrectlyInAwesomePatchedMode	powerlevel9k/test/functions/icons.spec	/^function testLcCtypeIsSetCorrectlyInAwesomePatchedMode() {$/;"	f
testLcCtypeIsSetCorrectlyInCompatibleMode	powerlevel9k/test/functions/icons.spec	/^function testLcCtypeIsSetCorrectlyInCompatibleMode() {$/;"	f
testLcCtypeIsSetCorrectlyInDefaultMode	powerlevel9k/test/functions/icons.spec	/^function testLcCtypeIsSetCorrectlyInDefaultMode() {$/;"	f
testLcCtypeIsSetCorrectlyInFlatMode	powerlevel9k/test/functions/icons.spec	/^function testLcCtypeIsSetCorrectlyInFlatMode() {$/;"	f
testLcCtypeIsSetCorrectlyInNerdfontFontconfigMode	powerlevel9k/test/functions/icons.spec	/^function testLcCtypeIsSetCorrectlyInNerdfontFontconfigMode() {$/;"	f
testLineNo	powerlevel9k/shunit2/source/2.1/examples/lineno_test.sh	/^testLineNo()$/;"	f
testMissingDirectoryCreation	powerlevel9k/shunit2/source/2.1/examples/mkdir_test.sh	/^testMissingDirectoryCreation()$/;"	f
testNotNull	powerlevel9k/shunit2/source/2.1/src/shunit2_test_macros.sh	/^testNotNull()$/;"	f
testNotSame	powerlevel9k/shunit2/source/2.1/src/shunit2_test_macros.sh	/^testNotSame()$/;"	f
testNull	powerlevel9k/shunit2/source/2.1/src/shunit2_test_macros.sh	/^testNull()$/;"	f
testOmittingFirstCharacterWorks	powerlevel9k/test/segments/dir.spec	/^function testOmittingFirstCharacterWorks() {$/;"	f
testOmittingFirstCharacterWorksWithChangingPathSeparator	powerlevel9k/test/segments/dir.spec	/^function testOmittingFirstCharacterWorksWithChangingPathSeparator() {$/;"	f
testOmittingFirstCharacterWorksWithChangingPathSeparatorAndDefaultTruncation	powerlevel9k/test/segments/dir.spec	/^function testOmittingFirstCharacterWorksWithChangingPathSeparatorAndDefaultTruncation() {$/;"	f
testOmittingFirstCharacterWorksWithChangingPathSeparatorAndMiddleTruncation	powerlevel9k/test/segments/dir.spec	/^function testOmittingFirstCharacterWorksWithChangingPathSeparatorAndMiddleTruncation() {$/;"	f
testOmittingFirstCharacterWorksWithChangingPathSeparatorAndRightTruncation	powerlevel9k/test/segments/dir.spec	/^function testOmittingFirstCharacterWorksWithChangingPathSeparatorAndRightTruncation() {$/;"	f
testOtherFolderDetectionWorks	powerlevel9k/test/segments/dir.spec	/^function testOtherFolderDetectionWorks() {$/;"	f
testOverwritingIconsWork	powerlevel9k/test/powerlevel9k.spec	/^function testOverwritingIconsWork() {$/;"	f
testPartyLikeItIs1999	powerlevel9k/shunit2/source/2.1/examples/party_test.sh	/^testPartyLikeItIs1999()$/;"	f
testPrepForSourcing	powerlevel9k/shunit2/source/2.1/src/shunit2_test_misc.sh	/^testPrepForSourcing()$/;"	f
testPrintSizeHumanReadableWithBigNumber	powerlevel9k/test/functions/utilities.spec	/^function testPrintSizeHumanReadableWithBigNumber() {$/;"	f
testPrintSizeHumanReadableWithExabytesAsBase	powerlevel9k/test/functions/utilities.spec	/^function testPrintSizeHumanReadableWithExabytesAsBase() {$/;"	f
testRecursiveDirectoryCreation	powerlevel9k/shunit2/source/2.1/examples/mkdir_test.sh	/^testRecursiveDirectoryCreation()$/;"	f
testRust	powerlevel9k/test/segments/rust_version.spec	/^function testRust() {$/;"	f
testRustPrintsNothingIfRustIsNotAvailable	powerlevel9k/test/segments/rust_version.spec	/^function testRustPrintsNothingIfRustIsNotAvailable() {$/;"	f
testSame	powerlevel9k/shunit2/source/2.1/src/shunit2_test_macros.sh	/^testSame()$/;"	f
testSegmentShouldBeJoinedIfDirectPredecessingSegmentIsJoined	powerlevel9k/test/functions/utilities.spec	/^function testSegmentShouldBeJoinedIfDirectPredecessingSegmentIsJoined() {$/;"	f
testSegmentShouldBeJoinedIfPredecessingSegmentIsJoinedTransitivley	powerlevel9k/test/functions/utilities.spec	/^function testSegmentShouldBeJoinedIfPredecessingSegmentIsJoinedTransitivley() {$/;"	f
testSegmentShouldNotBeJoinedIfPredecessingSegmentIsNotJoinedButConditional	powerlevel9k/test/functions/utilities.spec	/^function testSegmentShouldNotBeJoinedIfPredecessingSegmentIsNotJoinedButConditional() {$/;"	f
testSetDefaultSetsVariable	powerlevel9k/test/functions/utilities.spec	/^function testSetDefaultSetsVariable() {$/;"	f
testStandalone	powerlevel9k/shunit2/source/2.1/src/shunit2_test_standalone.sh	/^testStandalone()$/;"	f
testTransitiveJoinedSegments	powerlevel9k/test/powerlevel9k.spec	/^function testTransitiveJoinedSegments() {$/;"	f
testTruncateFolderWithHomeDirWorks	powerlevel9k/test/segments/dir.spec	/^function testTruncateFolderWithHomeDirWorks() {$/;"	f
testTruncateFoldersWorks	powerlevel9k/test/segments/dir.spec	/^function testTruncateFoldersWorks() {$/;"	f
testTruncateMiddleWorks	powerlevel9k/test/segments/dir.spec	/^function testTruncateMiddleWorks() {$/;"	f
testTruncateToUniqueWorks	powerlevel9k/test/segments/dir.spec	/^function testTruncateToUniqueWorks() {$/;"	f
testTruncateWithFolderMarkerWithChangedFolderMarker	powerlevel9k/test/segments/dir.spec	/^function testTruncateWithFolderMarkerWithChangedFolderMarker() {$/;"	f
testTruncateWithFolderMarkerWorks	powerlevel9k/test/segments/dir.spec	/^function testTruncateWithFolderMarkerWorks() {$/;"	f
testTruncateWithPackageNameIfRepoIsSymlinkedInsideDeepFolder	powerlevel9k/test/segments/dir.spec	/^function testTruncateWithPackageNameIfRepoIsSymlinkedInsideDeepFolder() {$/;"	f
testTruncateWithPackageNameIfRepoIsSymlinkedInsideGitDir	powerlevel9k/test/segments/dir.spec	/^function testTruncateWithPackageNameIfRepoIsSymlinkedInsideGitDir() {$/;"	f
testTruncateWithPackageNameWorks	powerlevel9k/test/segments/dir.spec	/^function testTruncateWithPackageNameWorks() {$/;"	f
testTruncationFromRightWithEmptyDelimiter	powerlevel9k/test/segments/dir.spec	/^function testTruncationFromRightWithEmptyDelimiter() {$/;"	f
testTruncationFromRightWorks	powerlevel9k/test/segments/dir.spec	/^function testTruncationFromRightWorks() {$/;"	f
testUnboundVariable	powerlevel9k/shunit2/source/2.1/src/shunit2_test_misc.sh	/^testUnboundVariable()$/;"	f
th_assertTrueWithNoOutput	powerlevel9k/shunit2/source/2.1/examples/mkdir_test.sh	/^th_assertTrueWithNoOutput()$/;"	f
tmux_command	zsh-autosuggestions/spec/terminal_session.rb	/^  def tmux_command(cmd)$/;"	f	class:TerminalSession
tmux_socket_name	zsh-autosuggestions/spec/terminal_session.rb	/^  def tmux_socket_name$/;"	f	class:TerminalSession
togglebg#map	vim-colors-solarized/autoload/togglebg.vim	/^function! togglebg#map(mapActivation)$/;"	f
truncatePathFromRight	powerlevel9k/functions/utilities.zsh	/^function truncatePathFromRight() {$/;"	f
upsearch	powerlevel9k/functions/utilities.zsh	/^function upsearch () {$/;"	f
usage	powerlevel9k/shunit2/source/2.0/src/test/run-test-suite	/^usage()$/;"	f
usage	powerlevel9k/shunit2/source/2.1/src/shunit2_test.sh	/^usage()$/;"	f
versions_main	powerlevel9k/shunit2/source/2.1/lib/versions	/^versions_main()$/;"	f
versions_osName	powerlevel9k/shunit2/source/2.1/lib/versions	/^versions_osName()$/;"	f
versions_osVersion	powerlevel9k/shunit2/source/2.1/lib/versions	/^versions_osVersion()$/;"	f
versions_shellVersion	powerlevel9k/shunit2/source/2.1/lib/versions	/^versions_shellVersion()$/;"	f
versions_shell_bash	powerlevel9k/shunit2/source/2.1/lib/versions	/^versions_shell_bash()$/;"	f
versions_shell_dash	powerlevel9k/shunit2/source/2.1/lib/versions	/^versions_shell_dash()$/;"	f
versions_shell_ksh	powerlevel9k/shunit2/source/2.1/lib/versions	/^versions_shell_ksh()$/;"	f
versions_shell_pdksh	powerlevel9k/shunit2/source/2.1/lib/versions	/^versions_shell_pdksh()$/;"	f
versions_shell_zsh	powerlevel9k/shunit2/source/2.1/lib/versions	/^versions_shell_zsh()$/;"	f
with_history	zsh-autosuggestions/spec/spec_helper.rb	/^  def with_history(*commands, &block)$/;"	f
zshexit	zsh-autosuggestions/src/async.zsh	/^	zshexit() {$/;"	f
zshexit	zsh-autosuggestions/zsh-autosuggestions.zsh	/^	zshexit() {$/;"	f
